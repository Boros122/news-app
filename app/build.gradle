apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

android {
    compileSdk compileSdkVersionNumber
    defaultConfig {
        applicationId "com.example.newsapp"
        minSdk minimumSdkVersionNumer
        targetSdk targetSdkVersionNumber
        versionCode generateVersionCode(1, 0, 0)
        versionName generateVersionName(1, 0, 0)
        buildConfigField "String", "API_KEY", getApiKey()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {
        viewBinding true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.navigation:navigation-fragment-ktx:2.4.2"

    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2"
    testImplementation "org.mockito:mockito-core:3.1.0"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"

    // DI
    implementation 'com.google.dagger:dagger:2.42'
    kapt 'com.google.dagger:dagger-compiler:2.42'

    // Network
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.0"

    // Image Loading
    implementation "com.github.bumptech.glide:glide:4.11.0"
}

String getApiKey() {
    return "\"" + getLocalProperties().getProperty("apiKey") + "\""
}

Properties getLocalProperties() {
    Properties properties = new Properties()
    def localPropertiesFile = project.rootProject.file("local.properties")
    if (localPropertiesFile.canRead()) {
        properties.load(localPropertiesFile.newDataInputStream())
    }
    return properties
}